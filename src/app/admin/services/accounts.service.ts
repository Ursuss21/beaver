import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';
import { Account } from '../../shared/models/account.model';

@Injectable({
  providedIn: 'root',
})
export class AccountsService {
  private _accounts: Account[] = [
    {
      id: '0',
      firstName: 'Robert',
      lastName: 'Skrzypczak',
      email: 'robert.skrzypczak@gmail.com',
      image: 'assets/icons/icon14.png',
      positionId: '1',
      employmentDate: '2021-08-15',
      workingTime: 40,
      active: true,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'bob@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '1',
      firstName: 'Beata',
      lastName: 'Iwan',
      email: 'beata.iwan@gmail.com',
      image: 'assets/icons/icon4.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      active: true,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'iwaaaaaaaan@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '2',
      firstName: 'Joanna',
      lastName: 'Malawska',
      email: 'joanna.malawska@gmail.com',
      image: 'assets/icons/icon8.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      active: true,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'asia@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '3',
      firstName: 'Anna',
      lastName: 'Nowak',
      email: 'anna.nowak@gmail.com',
      image: 'assets/icons/icon7.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      exitDate: '2022-09-01',
      active: false,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'nowczi@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '4',
      firstName: 'Paweł',
      lastName: 'Szymański',
      email: 'pawel.szymanski@gmail.com',
      image: 'assets/icons/icon19.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      active: true,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'szymon@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '5',
      firstName: 'Maria',
      lastName: 'Wiśniewska',
      email: 'maria.wisniewska@gmail.com',
      image: 'assets/icons/icon3.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      exitDate: '2022-09-01',
      active: false,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'marthaaa@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '6',
      firstName: 'Jan',
      email: 'jan.kowalski@gmail.com',
      lastName: 'Kowalski',
      image: 'assets/icons/icon13.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      exitDate: '2022-09-01',
      active: false,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'kowalski@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '7',
      firstName: 'Emil',
      lastName: 'Zieliński',
      email: 'emil.zielinski@gmail.com',
      image: 'assets/icons/icon18.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      active: true,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'zielu@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
    {
      id: '8',
      firstName: 'Krystian',
      lastName: 'Kowalczyk',
      email: 'krystian.kowalczyk@gmail.com',
      image: 'assets/icons/icon16.png',
      positionId: 'Product Designer',
      employmentDate: '2022-07-01',
      workingTime: 40,
      active: true,
      password: 'abc',
      sex: 'male',
      birthDate: '1999-03-12',
      phoneNumber: '777-777-777',
      privateEmail: 'kowal-@gmail.com',
      street: 'Nowowiejska',
      houseNumber: '17',
      apartmentNumber: '43',
      city: 'Warszawa',
      postalCode: '35-323',
      country: 'Poland',
      accountNumber: '90 0023 0231 2145 3443 2133 2300',
    },
  ];

  constructor() {}

  getAccount(id: string): Observable<Account> {
    const account = this._accounts.find(account => account.id === id);
    return of(account as Account);
  }
}
